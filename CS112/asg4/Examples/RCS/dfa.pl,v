head	1.2;
access;
symbols;
locks;
comment	@# @;


1.2
date	2011.05.20.02.53.59;	author -;	state -;
branches;
next	1.1;

1.1
date	2009.02.24.23.54.05;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@% $Id: dfa.pl,v 1.1 2009/02/24 23:54:05 - - $ */

%
% DFA simulator.
% Simulates a DFA that accepts the language b*aa*b[ab]*
%

%
% Facts describing the DFA.
% trans( source, label, dest).
%

trans( 0, a, 1).
trans( 0, b, 0).
trans( 1, a, 1).
trans( 1, b, 2).
trans( 2, a, 2).
trans( 2, b, 2).
start( 0).
final( 2).

%
% Functions for determining moves.
%

match( String) :- start( State), move( State, String).

move( From_state, String) :-
	[Head_string | Tail_string] = String, 
	trans( From_state, Head_string, To_state), 
	print_status( From_state, String), 
	move( To_state, Tail_string).

move( From_state, []) :-
	final( From_state), 
	print_status( From_state, []).

print_status( State, String) :-
	write( State), write( ' '), write( String), nl.

% TEST: match( [b, b, a, a, b, a, b]).
% TEST: match( [b, b, b, b]).

@


1.1
log
@-
@
text
@d1 1
a1 1
/* $Id: dfa.pl,v 1.2 2008-03-07 18:46:56-08 - - $ */
d3 9
a11 9
/*
* DFA simulator.
* Simulates a DFA that accepts the language b*aa*b[ab]*
*/

/*
* Facts describing the DFA.
* trans( source, label, dest).
*/
d22 3
a24 3
/*
* Functions for determining moves.
*/
d41 2
a42 2
/*
:- match( [b, b, a, a, b, a, b]).
a43 3
:- match( [b, b, b, b]).

*/
@
